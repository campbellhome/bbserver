// Copyright (c) 2012-2019 Matt Campbell
// MIT license (see License.txt)

#pragma once

#include "bb_sockets.h"

#if BB_ENABLED

#if BB_USING(BB_COMPILER_MSVC)

// clang-format off
#define BBNET_EWOULDBLOCK     WSAEWOULDBLOCK
#define BBNET_EINPROGRESS     WSAEINPROGRESS
#define BBNET_EALREADY        WSAEALREADY
#define BBNET_ENOTSOCK        WSAENOTSOCK
#define BBNET_EDESTADDRREQ    WSAEDESTADDRREQ
#define BBNET_EMSGSIZE        WSAEMSGSIZE
#define BBNET_EPROTOTYPE      WSAEPROTOTYPE
#define BBNET_ENOPROTOOPT     WSAENOPROTOOPT
#define BBNET_EPROTONOSUPPORT WSAEPROTONOSUPPORT
#define BBNET_ESOCKTNOSUPPORT WSAESOCKTNOSUPPORT
#define BBNET_EOPNOTSUPP      WSAEOPNOTSUPP
#define BBNET_EPFNOSUPPORT    WSAEPFNOSUPPORT
#define BBNET_EAFNOSUPPORT    WSAEAFNOSUPPORT
#define BBNET_EADDRINUSE      WSAEADDRINUSE
#define BBNET_EADDRNOTAVAIL   WSAEADDRNOTAVAIL
#define BBNET_ENETDOWN        WSAENETDOWN
#define BBNET_ENETUNREACH     WSAENETUNREACH
#define BBNET_ENETRESET       WSAENETRESET
#define BBNET_ECONNABORTED    WSAECONNABORTED
#define BBNET_ECONNRESET      WSAECONNRESET
#define BBNET_ENOBUFS         WSAENOBUFS
#define BBNET_EISCONN         WSAEISCONN
#define BBNET_ENOTCONN        WSAENOTCONN
#define BBNET_ESHUTDOWN       WSAESHUTDOWN
#define BBNET_ETOOMANYREFS    WSAETOOMANYREFS
#define BBNET_ETIMEDOUT       WSAETIMEDOUT
#define BBNET_ECONNREFUSED    WSAECONNREFUSED
#define BBNET_ELOOP           WSAELOOP
#define BBNET_ENAMETOOLONG    WSAENAMETOOLONG
#define BBNET_EHOSTDOWN       WSAEHOSTDOWN
#define BBNET_EHOSTUNREACH    WSAEHOSTUNREACH
#define BBNET_ENOTEMPTY       WSAENOTEMPTY
#define BBNET_EPROCLIM        WSAEPROCLIM
#define BBNET_EUSERS          WSAEUSERS
#define BBNET_EDQUOT          WSAEDQUOT
#define BBNET_ESTALE          WSAESTALE
#define BBNET_EREMOTE         WSAEREMOTE
//#define BBNET_EPIPE         WSAEPIPE
// clang-format on

#else // #if BB_USING(BB_COMPILER_MSVC)

// clang-format off
#define BBNET_EWOULDBLOCK     EWOULDBLOCK
#define BBNET_EINPROGRESS     EINPROGRESS
#define BBNET_EALREADY        EALREADY
#define BBNET_ENOTSOCK        ENOTSOCK
#define BBNET_EDESTADDRREQ    EDESTADDRREQ
#define BBNET_EMSGSIZE        EMSGSIZE
#define BBNET_EPROTOTYPE      EPROTOTYPE
#define BBNET_ENOPROTOOPT     ENOPROTOOPT
#define BBNET_EPROTONOSUPPORT EPROTONOSUPPORT
#define BBNET_ESOCKTNOSUPPORT ESOCKTNOSUPPORT
#define BBNET_EOPNOTSUPP      EOPNOTSUPP
#define BBNET_EPFNOSUPPORT    EPFNOSUPPORT
#define BBNET_EAFNOSUPPORT    EAFNOSUPPORT
#define BBNET_EADDRINUSE      EADDRINUSE
#define BBNET_EADDRNOTAVAIL   EADDRNOTAVAIL
#define BBNET_ENETDOWN        ENETDOWN
#define BBNET_ENETUNREACH     ENETUNREACH
#define BBNET_ENETRESET       ENETRESET
#define BBNET_ECONNABORTED    ECONNABORTED
#define BBNET_ECONNRESET      ECONNRESET
#define BBNET_ENOBUFS         ENOBUFS
#define BBNET_EISCONN         EISCONN
#define BBNET_ENOTCONN        ENOTCONN
#define BBNET_ESHUTDOWN       ESHUTDOWN
#define BBNET_ETOOMANYREFS    ETOOMANYREFS
#define BBNET_ETIMEDOUT       ETIMEDOUT
#define BBNET_ECONNREFUSED    ECONNREFUSED
#define BBNET_ELOOP           ELOOP
#define BBNET_ENAMETOOLONG    ENAMETOOLONG
#define BBNET_EHOSTDOWN       EHOSTDOWN
#define BBNET_EHOSTUNREACH    EHOSTUNREACH
#define BBNET_ENOTEMPTY       ENOTEMPTY
//#define BBNET_EPROCLIM      EPROCLIM
#define BBNET_EUSERS          EUSERS
#define BBNET_EDQUOT          EDQUOT
#define BBNET_ESTALE          ESTALE
#define BBNET_EREMOTE         EREMOTE
#define BBNET_EPIPE           EPIPE
// clang-format on

#endif // #else // #if BB_USING(BB_COMPILER_MSVC)

#if defined(__cplusplus)
extern "C" {
#endif

const char *bbnet_error_to_string(int err);

#if defined(__cplusplus)
}
#endif

#endif // #if BB_ENABLED
