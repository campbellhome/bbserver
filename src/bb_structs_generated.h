// Copyright (c) 2012-2019 Matt Campbell
// MIT license (see License.txt)

// AUTOGENERATED FILE - DO NOT EDIT

// clang-format off

#pragma once

#if defined(__cplusplus)
extern "C" {
#endif

typedef struct tagPOINT POINT;
typedef struct tagRECT RECT;
typedef struct tagWINDOWPLACEMENT WINDOWPLACEMENT;
typedef struct configWhitelistEntry_s configWhitelistEntry_t;
typedef struct configWhitelist_s configWhitelist_t;
typedef struct openTargetEntry_s openTargetEntry_t;
typedef struct openTargetList_s openTargetList_t;
typedef struct pathFixupEntry_s pathFixupEntry_t;
typedef struct pathFixupList_s pathFixupList_t;
typedef struct tag_tooltipConfig tooltipConfig;
typedef struct tag_sizeConfig sizeConfig;
typedef struct config_s config_t;
typedef struct _FILETIME FILETIME;
typedef struct new_recording_s new_recording_t;
typedef struct recordings_tab_config_s recordings_tab_config_t;
typedef struct recordings_config_s recordings_config_t;
typedef struct updateConfig_s updateConfig_t;
typedef struct site_config_s site_config_t;
typedef struct uuidState_s uuidState_t;
typedef struct view_pieInstance_s view_pieInstance_t;
typedef struct view_pieInstances_s view_pieInstances_t;
typedef struct view_config_thread_s view_config_thread_t;
typedef struct view_config_threads_s view_config_threads_t;
typedef struct view_config_file_s view_config_file_t;
typedef struct view_config_files_s view_config_files_t;
typedef struct view_config_category_s view_config_category_t;
typedef struct view_config_categories_s view_config_categories_t;
typedef struct view_config_column_s view_config_column_t;
typedef struct view_config_columns_s view_config_columns_t;
typedef struct view_console_history_entry_t view_console_history_entry_t;
typedef struct view_console_entries_t view_console_history_entries_t;
typedef struct view_console_history_t view_console_history_t;
typedef struct view_config_s view_config_t;
typedef struct sb_s sb_t;
typedef struct sbs_s sbs_t;
typedef struct sdictEntry_s sdictEntry_t;
typedef struct sdict_s sdict_t;
typedef struct uuid_node_s uuid_node_t;
typedef struct fontConfig_s fontConfig_t;
typedef struct fontConfigs_s fontConfigs_t;

void POINT_reset(POINT *val);
void RECT_reset(RECT *val);
void WINDOWPLACEMENT_reset(WINDOWPLACEMENT *val);
void configWhitelistEntry_reset(configWhitelistEntry_t *val);
void configWhitelist_reset(configWhitelist_t *val);
void openTargetEntry_reset(openTargetEntry_t *val);
void openTargetList_reset(openTargetList_t *val);
void pathFixupEntry_reset(pathFixupEntry_t *val);
void pathFixupList_reset(pathFixupList_t *val);
void tooltipConfig_reset(tooltipConfig *val);
void sizeConfig_reset(sizeConfig *val);
void config_reset(config_t *val);
void FILETIME_reset(FILETIME *val);
void new_recording_reset(new_recording_t *val);
void recordings_tab_config_reset(recordings_tab_config_t *val);
void recordings_config_reset(recordings_config_t *val);
void updateConfig_reset(updateConfig_t *val);
void site_config_reset(site_config_t *val);
void uuidState_reset(uuidState_t *val);
void view_pieInstance_reset(view_pieInstance_t *val);
void view_pieInstances_reset(view_pieInstances_t *val);
void view_config_thread_reset(view_config_thread_t *val);
void view_config_threads_reset(view_config_threads_t *val);
void view_config_file_reset(view_config_file_t *val);
void view_config_files_reset(view_config_files_t *val);
void view_config_category_reset(view_config_category_t *val);
void view_config_categories_reset(view_config_categories_t *val);
void view_config_column_reset(view_config_column_t *val);
void view_config_columns_reset(view_config_columns_t *val);
void view_console_history_entry_reset(view_console_history_entry_t *val);
void view_console_history_entries_reset(view_console_history_entries_t *val);
void view_console_history_reset(view_console_history_t *val);
void view_config_reset(view_config_t *val);
void sb_reset_from_loc(const char *file, int line, sb_t *val);
void sbs_reset_from_loc(const char *file, int line, sbs_t *val);
void sdictEntry_reset(sdictEntry_t *val);
void sdict_reset(sdict_t *val);
void uuid_node_reset(uuid_node_t *val);
void fontConfig_reset(fontConfig_t *val);
void fontConfigs_reset(fontConfigs_t *val);

POINT POINT_clone(const POINT *src);
RECT RECT_clone(const RECT *src);
WINDOWPLACEMENT WINDOWPLACEMENT_clone(const WINDOWPLACEMENT *src);
configWhitelistEntry_t configWhitelistEntry_clone(const configWhitelistEntry_t *src);
configWhitelist_t configWhitelist_clone(const configWhitelist_t *src);
openTargetEntry_t openTargetEntry_clone(const openTargetEntry_t *src);
openTargetList_t openTargetList_clone(const openTargetList_t *src);
pathFixupEntry_t pathFixupEntry_clone(const pathFixupEntry_t *src);
pathFixupList_t pathFixupList_clone(const pathFixupList_t *src);
tooltipConfig tooltipConfig_clone(const tooltipConfig *src);
sizeConfig sizeConfig_clone(const sizeConfig *src);
config_t config_clone(const config_t *src);
FILETIME FILETIME_clone(const FILETIME *src);
new_recording_t new_recording_clone(const new_recording_t *src);
recordings_tab_config_t recordings_tab_config_clone(const recordings_tab_config_t *src);
recordings_config_t recordings_config_clone(const recordings_config_t *src);
updateConfig_t updateConfig_clone(const updateConfig_t *src);
site_config_t site_config_clone(const site_config_t *src);
uuidState_t uuidState_clone(const uuidState_t *src);
view_pieInstance_t view_pieInstance_clone(const view_pieInstance_t *src);
view_pieInstances_t view_pieInstances_clone(const view_pieInstances_t *src);
view_config_thread_t view_config_thread_clone(const view_config_thread_t *src);
view_config_threads_t view_config_threads_clone(const view_config_threads_t *src);
view_config_file_t view_config_file_clone(const view_config_file_t *src);
view_config_files_t view_config_files_clone(const view_config_files_t *src);
view_config_category_t view_config_category_clone(const view_config_category_t *src);
view_config_categories_t view_config_categories_clone(const view_config_categories_t *src);
view_config_column_t view_config_column_clone(const view_config_column_t *src);
view_config_columns_t view_config_columns_clone(const view_config_columns_t *src);
view_console_history_entry_t view_console_history_entry_clone(const view_console_history_entry_t *src);
view_console_history_entries_t view_console_history_entries_clone(const view_console_history_entries_t *src);
view_console_history_t view_console_history_clone(const view_console_history_t *src);
view_config_t view_config_clone(const view_config_t *src);
sb_t sb_clone_from_loc(const char *file, int line, const sb_t *src);
sbs_t sbs_clone_from_loc(const char *file, int line, const sbs_t *src);
sdictEntry_t sdictEntry_clone(const sdictEntry_t *src);
sdict_t sdict_clone(const sdict_t *src);
uuid_node_t uuid_node_clone(const uuid_node_t *src);
fontConfig_t fontConfig_clone(const fontConfig_t *src);
fontConfigs_t fontConfigs_clone(const fontConfigs_t *src);

#if defined(__cplusplus)
} // extern "C"
#endif
