// Copyright (c) Matt Campbell
// MIT license (see License.txt)

// AUTOGENERATED FILE - DO NOT EDIT

// clang-format off

#pragma once

#include "bb.h" // pull in stdint.h warning suppression for VS 2019 16.4 when compiling .c files
#include "parson/parson.h"

#if defined(__cplusplus)
extern "C" {
#endif

struct sb_s;
struct sbs_s;
struct sdictEntry_s;
struct sdict_s;
struct tag_sdicts;
struct uuid_node_s;
struct fontConfig_s;
struct fontConfigs_s;
struct color_config_s;
struct colors_config_s;
struct theme_config_s;
struct fontConfig_s;
struct fontConfigs_s;
struct color_config_s;
struct colors_config_s;
struct theme_config_s;

typedef struct sb_s sb_t;
typedef struct sbs_s sbs_t;
typedef struct sdictEntry_s sdictEntry_t;
typedef struct sdict_s sdict_t;
typedef struct tag_sdicts sdicts;
typedef struct uuid_node_s uuid_node_t;
typedef struct fontConfig_s fontConfig_t;
typedef struct fontConfigs_s fontConfigs_t;
typedef struct color_config_s color_config_t;
typedef struct colors_config_s colors_config_t;
typedef struct theme_config_s theme_config_t;
typedef struct fontConfig_s fontConfig_t;
typedef struct fontConfigs_s fontConfigs_t;
typedef struct color_config_s color_config_t;
typedef struct colors_config_s colors_config_t;
typedef struct theme_config_s theme_config_t;

typedef enum tag_styleColor_e styleColor_e;
typedef enum tag_styleColor_e styleColor_e;

sb_t json_deserialize_sb_t(JSON_Value *src);
sbs_t json_deserialize_sbs_t(JSON_Value *src);
sdictEntry_t json_deserialize_sdictEntry_t(JSON_Value *src);
sdict_t json_deserialize_sdict_t(JSON_Value *src);
sdicts json_deserialize_sdicts(JSON_Value *src);
uuid_node_t json_deserialize_uuid_node_t(JSON_Value *src);
fontConfig_t json_deserialize_fontConfig_t(JSON_Value *src);
fontConfigs_t json_deserialize_fontConfigs_t(JSON_Value *src);
color_config_t json_deserialize_color_config_t(JSON_Value *src);
colors_config_t json_deserialize_colors_config_t(JSON_Value *src);
theme_config_t json_deserialize_theme_config_t(JSON_Value *src);
fontConfig_t json_deserialize_fontConfig_t(JSON_Value *src);
fontConfigs_t json_deserialize_fontConfigs_t(JSON_Value *src);
color_config_t json_deserialize_color_config_t(JSON_Value *src);
colors_config_t json_deserialize_colors_config_t(JSON_Value *src);
theme_config_t json_deserialize_theme_config_t(JSON_Value *src);

JSON_Value *json_serialize_sb_t(const sb_t *src);
JSON_Value *json_serialize_sbs_t(const sbs_t *src);
JSON_Value *json_serialize_sdictEntry_t(const sdictEntry_t *src);
JSON_Value *json_serialize_sdict_t(const sdict_t *src);
JSON_Value *json_serialize_sdicts(const sdicts *src);
JSON_Value *json_serialize_uuid_node_t(const uuid_node_t *src);
JSON_Value *json_serialize_fontConfig_t(const fontConfig_t *src);
JSON_Value *json_serialize_fontConfigs_t(const fontConfigs_t *src);
JSON_Value *json_serialize_color_config_t(const color_config_t *src);
JSON_Value *json_serialize_colors_config_t(const colors_config_t *src);
JSON_Value *json_serialize_theme_config_t(const theme_config_t *src);
JSON_Value *json_serialize_fontConfig_t(const fontConfig_t *src);
JSON_Value *json_serialize_fontConfigs_t(const fontConfigs_t *src);
JSON_Value *json_serialize_color_config_t(const color_config_t *src);
JSON_Value *json_serialize_colors_config_t(const colors_config_t *src);
JSON_Value *json_serialize_theme_config_t(const theme_config_t *src);


styleColor_e json_deserialize_styleColor_e(JSON_Value *src);
styleColor_e json_deserialize_styleColor_e(JSON_Value *src);

JSON_Value *json_serialize_styleColor_e(const styleColor_e src);
JSON_Value *json_serialize_styleColor_e(const styleColor_e src);


styleColor_e styleColor_e_from_string(const char *src);
styleColor_e styleColor_e_from_string(const char *src);

const char *string_from_styleColor_e(const styleColor_e src);
const char *string_from_styleColor_e(const styleColor_e src);

#if defined(__cplusplus)
} // extern "C"
#endif
