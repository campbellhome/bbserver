// Copyright (c) Matt Campbell
// MIT license (see License.txt)

// AUTOGENERATED FILE - DO NOT EDIT

// clang-format off

#pragma once

#include "bb_types.h"

#if defined(__cplusplus)
extern "C" {
#endif

struct sb_s;
struct sbs_s;
struct sdictEntry_s;
struct sdict_s;
struct tag_sdicts;
struct uuid_node_s;
struct fontConfig_s;
struct fontConfigs_s;
struct color_config_s;
struct colors_config_s;
struct theme_config_s;
struct fontConfig_s;
struct fontConfigs_s;
struct color_config_s;
struct colors_config_s;
struct theme_config_s;

typedef struct sb_s sb_t;
typedef struct sbs_s sbs_t;
typedef struct sdictEntry_s sdictEntry_t;
typedef struct sdict_s sdict_t;
typedef struct tag_sdicts sdicts;
typedef struct uuid_node_s uuid_node_t;
typedef struct fontConfig_s fontConfig_t;
typedef struct fontConfigs_s fontConfigs_t;
typedef struct color_config_s color_config_t;
typedef struct colors_config_s colors_config_t;
typedef struct theme_config_s theme_config_t;
typedef struct fontConfig_s fontConfig_t;
typedef struct fontConfigs_s fontConfigs_t;
typedef struct color_config_s color_config_t;
typedef struct colors_config_s colors_config_t;
typedef struct theme_config_s theme_config_t;

void sb_reset_from_loc(const char *file, int line, sb_t *val);
void sbs_reset_from_loc(const char *file, int line, sbs_t *val);
void sdictEntry_reset(sdictEntry_t *val);
void sdict_reset(sdict_t *val);
void sdicts_reset(sdicts *val);
void uuid_node_reset(uuid_node_t *val);
void fontConfig_reset(fontConfig_t *val);
void fontConfigs_reset(fontConfigs_t *val);
void color_config_reset(color_config_t *val);
void colors_config_reset(colors_config_t *val);
void theme_config_reset(theme_config_t *val);
void fontConfig_reset(fontConfig_t *val);
void fontConfigs_reset(fontConfigs_t *val);
void color_config_reset(color_config_t *val);
void colors_config_reset(colors_config_t *val);
void theme_config_reset(theme_config_t *val);

#if !defined(__cplusplus) || defined(DECLARE_sb_clone)
sb_t sb_clone_from_loc(const char *file, int line, const sb_t *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_sbs_clone)
sbs_t sbs_clone_from_loc(const char *file, int line, const sbs_t *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_sdictEntry_clone)
sdictEntry_t sdictEntry_clone(const sdictEntry_t *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_sdict_clone)
sdict_t sdict_clone(const sdict_t *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_sdicts_clone)
sdicts sdicts_clone(const sdicts *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_uuid_node_clone)
uuid_node_t uuid_node_clone(const uuid_node_t *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_fontConfig_clone)
fontConfig_t fontConfig_clone(const fontConfig_t *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_fontConfigs_clone)
fontConfigs_t fontConfigs_clone(const fontConfigs_t *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_color_config_clone)
color_config_t color_config_clone(const color_config_t *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_colors_config_clone)
colors_config_t colors_config_clone(const colors_config_t *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_theme_config_clone)
theme_config_t theme_config_clone(const theme_config_t *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_fontConfig_clone)
fontConfig_t fontConfig_clone(const fontConfig_t *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_fontConfigs_clone)
fontConfigs_t fontConfigs_clone(const fontConfigs_t *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_color_config_clone)
color_config_t color_config_clone(const color_config_t *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_colors_config_clone)
colors_config_t colors_config_clone(const colors_config_t *src);
#endif
#if !defined(__cplusplus) || defined(DECLARE_theme_config_clone)
theme_config_t theme_config_clone(const theme_config_t *src);
#endif

#if defined(__cplusplus)
} // extern "C"
#endif

#if !defined(sb_reset)
#define sb_reset(var) sb_reset_from_loc(__FILE__, __LINE__, var);
#endif
#if !defined(sbs_reset)
#define sbs_reset(var) sbs_reset_from_loc(__FILE__, __LINE__, var);
#endif

#if !defined(sb_clone)
#define sb_clone(var) sb_clone_from_loc(__FILE__, __LINE__, var);
#endif
#if !defined(sbs_clone)
#define sbs_clone(var) sbs_clone_from_loc(__FILE__, __LINE__, var);
#endif
